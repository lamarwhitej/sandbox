name: remote ssh command
on:
  push:
    branches:
       - master
       - test_gh_actions

env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  GH_BRANCH: ${{ secrets.BRANCH }}
  SSH_KEY: ${{ secrets.KEY }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GCE_SA_KEY }}
        project_id: ${{ secrets.GCE_PROJECT }}

    - name: Update Webapp Servers
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/staging.key
        chmod 600 ~/.ssh/staging.key
        for zone in us-central1-a us-central1-b us-central1-c us-central1-f
        do
            #Search for all datpiff-webapp instances in zone
            HOSTIP=$(gcloud compute instances list --zones=$zone --filter="name:datpiff-webapp*" --format='get(networkInterfaces[0].accessConfigs[0].natIP)')

            #Change directory to home, check out branch, and do a git pull
            for i in $HOSTIP
            do
                ssh -o StrictHostKeyChecking=no -i ~/.ssh/staging.key root@$i 'cd /home && /opt/git/bin/git fetch -a && /opt/git/bin/git checkout $GH_BRANCH && /opt/git/bin/git pull'
            done
        done
    - name: Update HAProxy Config
      run: |
        for zone in us-central1-a us-central1-b us-central1-c us-central1-f
        do
            #Search for all datpiff-haproxy instances in zone
            PROXYIP=$(gcloud compute instances list --zones=$zone --filter="name:datpiff-haproxy*" --format='get(NAME)')

            for i in $PROXYIP
            do
                #Remove file in case it is there and created by another user
                gcloud compute ssh $i  --zone=$zone --command="sudo rm -f /tmp/README.md"

                #Copy to safe location
                gcloud compute scp --zone=$zone README.md $i:/tmp

                #Check for diffs in file
                FILE_DIFF=$(gcloud compute ssh $i --zone=$zone --command="diff /tmp/README.md /etc/haproxy/README.md || true")

                #If diffs copy file to location and reload the service
                if [ ! -z "$FILE_DIFF" ]
                then
                    gcloud compute ssh $i  --zone=$zone --command="sudo mv /tmp/README.md /etc/haproxy"
                    #sudo service haproxy reload
                fi
            done
        done
    - name: Update Apache Config
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/staging.key
        chmod 600 ~/.ssh/staging.key
        for zone in us-central1-a us-central1-b us-central1-c us-central1-f
        do
            #Search for all datpiff-webapp instances in zone
            HOSTIP=$(gcloud compute instances list --zones=$zone --filter="name:datpiff-webapp*" --format='get(networkInterfaces[0].accessConfigs[0].natIP)')

            for i in $HOSTIP
            do
                #Remove file in case it is there and created by another user
                ssh -o StrictHostKeyChecking=no -i ~/.ssh/staging.key root@$i 'sudo rm -f /tmp/README.md'

                #Copy to safe location
                scp -o StrictHostKeyChecking=no -i ~/.ssh/staging.key README.md root@$i:/tmp

                #Check for diffs in file
                FILE_DIFF=$(ssh -o StrictHostKeyChecking=no -i ~/.ssh/staging.key root@$i 'diff /tmp/README.md /etc/httpd/conf/README.md || true')

                #If diffs copy file to location and restart the service
                if [ ! -z "$FILE_DIFF" ]
                then
                    ssh -o StrictHostKeyChecking=no -i ~/.ssh/staging.key root@$i 'sudo mv /tmp/README.md /etc/httpd/conf/README.md'
                    #sudo service httpd reload
                fi
            done
        done
